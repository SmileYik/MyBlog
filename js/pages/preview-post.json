[{"markdown":"# 移动0\n  \n  \n## 题目\n  \n给定一个数组 ```nums```，编写一个函数将所有 ```0``` 移动到数组的末尾，同时保持非零元素的相对顺序。  \n  \n### 题解1\n  \n* 创建一个临时数组 ```temp```, 并将 ```nums``` 数组拷贝到 ```temp```中.\n","time":"2021-03-14 20:59:14","title":"移动0","url":"./post.html?AlgorithmsBeginningOfArray=hlarhv"},{"markdown":"# 旋转数组\n  \n## 题目\n  给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。\n  \n## 题解1\n  \n每次移一格, 移动k次  \n```\nclass Solution {\n","time":"2021-03-14 16:06:30","title":"旋转数组","url":"./post.html?AlgorithmsBeginningOfArray=hsmgco"},{"markdown":"# 存在重复元素\n  \n## 题目  \n  \n给定一个整数数组，判断是否存在重复元素。\n\n如果存在一值在数组中出现至少两次，函数返回 ```true```。如果数组中每个元素都不相同，则返回 ```false``` 。\n\n\n### 题解1\n","time":"2021-03-14 17:50:57","title":"存在重复元素","url":"./post.html?AlgorithmsBeginningOfArray=eqnsom"},{"markdown":"# 只出现一次的数字\n  \n## 题目  \n  \n给定一个**非空**整数数组，除了某个元素只出现一次以外，其余每个元素均出现两次。找出那个只出现了一次的元素。\n  \n### 题解1  \n  \n先对数组进行排序, 然后再寻找落单数字.\n  \n","time":"2021-03-14 18:39:59","title":"只出现一次的数字","url":"./post.html?AlgorithmsBeginningOfArray=xppwvc"},{"markdown":"# 加一 \n  \n## 题目\n  \n给定一个由 **整数** 组成的 **非空** 数组所表示的非负整数，在该数的基础上加一。\n\n最高位数字存放在数组的首位， 数组中每个元素只存储**单个数字**。\n\n你可以假设除了整数 ```0``` 之外，这个整数不会以零开头。\n  \n","time":"2021-03-14 20:47:07","title":"加一","url":"./post.html?AlgorithmsBeginningOfArray=dakmyl"}]