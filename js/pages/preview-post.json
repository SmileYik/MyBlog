[{"markdown":"一条包含字母 `A-Z` 的消息通过以下映射进行了 **编码** ：\n```\n'A' -> 1\n'B' -> 2\n...\n'Z' -> 26\n```\n要 **解码** 已编码的消息，所有数字必须基于上述映射的方法，反向映射回字母（可能有多种方法）。例如，`\"11106\"` 可以映射为：\n\n+ `\"AAJF\"` ，将消息分组为 `(1 1 10 6)`\n","time":"2021-04-21 21:45:44","title":"解码方法","url":"./post.html?AlgorithmsBookI=qnqals"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/all-about-array/x9nivs/)\n\n给你一个有序数组 `nums` ，请你 **原地** 删除重复出现的元素，使每个元素 **最多出现两次** ，返回删除后数组的新长度。\n\n不要使用额外的数组空间，你必须在 **原地** 修改输入数组 并在使用 `O(1)` 额外空间的条件下完成。\n\n### 题解1\n\n用辅助数组.\n\n","time":"2021-04-21 18:08:13","title":"删除排序数组中的重复项 II","url":"./post.html?AlgorithmsBeginningOfArray=encskx"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/all-about-array/x9p1iv/)\n\n给你一个数组 `nums` 和一个值 `val`，你需要 原地 移除所有数值等于 `val` 的元素，并返回移除后数组的新长度。\n\n不要使用额外的数组空间，你必须仅使用 **O(1)** 额外空间并 **原地** 修改输入数组。\n\n元素的顺序可以改变。你不需要考虑数组中超出新长度后面的元素。\n\n### 题解1\n\n","time":"2021-04-21 17:36:49","title":"移除元素","url":"./post.html?AlgorithmsBeginningOfArray=szlrwl"},{"markdown":"实现Math库中的`pow(x, n)` 函数, 即计算 `x` 的 `n` 次幂函数（即，$x^{n}$）。不得使用库函数，同时不需要考虑大数问题。\n\n### 题解1\n\n需要注意, 如果一个一个减过去, 那么可能会超时.\n\n如果是偶数次幂, 例如2n次幂, 则可以将 $x^{2n}$ 转换为 $(x^{2})^{n}$, 从而减少递归次数.\n\n``` java\nclass Solution {\n","time":"2021-04-18 22:27:33","title":"数值的整数次方","url":"./post.html?merge=sdqmvc"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/99wd55/)\n\n给定一个数字，我们按照如下规则把它翻译为字符串：`0` 翻译成 `“a”` ，`1` 翻译成 `“b”`，……，`11` 翻译成 `“l”`，……，`25` 翻译成 `“z”`。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。\n\n\n### 题解1\n\n我个人认为是暴力求解.\n原理就是利用递归, 一层一层剥夺数字直到数字字符串为空串.\n\n","time":"2021-04-17 22:35:49","title":"把数字翻译成字符串","url":"./post.html?AlgorithmsBookI=qzobry"}]