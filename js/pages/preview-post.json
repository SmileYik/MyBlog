[{"markdown":"编写一个程序，找到两个单链表相交的起始节点。\n\n如下面的两个链表：\n\n![linkedlist](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png)\n\n在节点 c1 开始相交。\n\n如果两个链表没有交点, 则返回 `null`.\n\n","time":"2021-04-09 21:52:53","title":"相交链表","url":"./post.html?LinkedList=xpcoao"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/linked-list/jjhf6/)\n\n给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 `null`。\n\n为了表示给定链表中的环，我们使用整数 `pos` 来表示链表尾连接到链表中的位置（索引从 `0` 开始）。 如果 `pos` 是 `-1`，则在该链表中没有环。注意，`pos` 仅仅是用于标识环的情况，并不会作为参数传递到函数中。\n\n**说明：不允许修改给定的链表。**\n\n\n### 题解1 - 利用HashSet\n","time":"2021-04-09 21:41:23","title":"环形链表 II","url":"./post.html?LinkedList=tpwtaw"},{"markdown":"给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。\n\n### 题解1\n\n先确定倒数第 n 个节点是顺序第几个节点, 然后再次遍历以删除.\n\n代码如下: \n\n```java\n/**\n","time":"2021-04-09 22:02:12","title":"删除链表的倒数第 N 个结点","url":"./post.html?LinkedList=jrarie"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/linked-list/jbex5/)\n\n给定一个链表，判断链表中是否有环。\n\n如果链表中有某个节点，可以通过连续跟踪 `next` 指针再次到达，则链表中存在环。 为了表示给定链表中的环，我们使用整数 `pos` 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 `pos` 是 `-1`，则在该链表中没有环。注意：`pos` 不作为参数进行传递，仅仅是为了标识链表的实际情况。\n\n如果链表中存在环，则返回 `true` 。 否则，返回 `false` 。\n\n\n### 题解1 - HashSet\n","time":"2021-04-09 14:32:17","title":"环形链表","url":"./post.html?LinkedList=dwlidn"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/linked-list/jy291/)\n\n设计链表的实现。您可以选择使用单链表或双链表。单链表中的节点应该具有两个属性：`val` 和 `next`。val 是当前节点的值，`next` 是指向下一个节点的指针/引用。如果要使用双向链表，则还需要一个属性 `prev` 以指示链表中的上一个节点。假设链表中的所有节点都是 `0-index` 的。\n\n在链表类中实现这些功能：\n+ `get(index)`：获取链表中第 index 个节点的值。如果索引无效，则返回-1。\n+ `addAtHead(val)`：在链表的第一个元素之前添加一个值为 val 的节点。插入后，新节点将成为链表的第一个节点。\n+ `addAtTail(val)`：将值为 val 的节点追加到链表的最后一个元素。\n+ `addAtIndex(index,val)`：在链表中的第 index 个节点之前添加值为 val  的节点。如果 index 等于链表的长度，则该节点将附加到链表的末尾。如果 index 大于链表长度，则不会插入节点。如果index小于0，则在头部插入节点。\n+ `deleteAtIndex(index)`：如果索引 index 有效，则删除链表中的第 index 个节点。\n","time":"2021-04-09 13:39:42","title":"设计链表","url":"./post.html?LinkedList=rlzord"}]