[{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnto1s/)\n\n你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。\n\n假设你有 `n` 个版本 `[1, 2, ..., n]`，你想找出导致之后所有版本出错的第一个错误的版本。\n\n你可以通过调用 `bool isBadVersion(version)` 接口来判断版本号 `version` 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。\n\n###### 示例:\n\n","time":"2021-03-29 22:04:12","title":"第一个错误的版本","url":"./post.html?AlgorithmsBeginningOfSortAndSearch=axwcon"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnumcr/)\n\n给你两个有序整数数组 `nums1` 和 `nums2`，请你将 `nums2` 合并到 `nums1` 中，使 `nums1` 成为一个有序数组。\n\n初始化 `nums1` 和 `nums2` 的元素数量分别为 `m` 和 `n` 。你可以假设 `nums1` 的空间大小等于 `m + n`，这样它就有足够的空间保存来自 `nums2` 的元素。\n\n##### 示例1: \n\n        输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3\n        输出：[1,2,2,3,5,6]\n","time":"2021-03-29 22:00:37","title":"合并两个有序数组","url":"./post.html?AlgorithmsBeginningOfSortAndSearch=gxsiis"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/x2f9gg/)\n\n判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。\n\n1. 数字 `1-9` 在每一行只能出现一次。\n2. 数字 `1-9` 在每一列只能出现一次。\n3. 数字 `1-9` 在每一个以粗实线分隔的 `3x3` 宫内只能出现一次。\n\n数独部分空格内已填入了数字，空白格用 `'.'` 表示。\n\n","time":"2021-03-28 11:27:45","title":"有效数独","url":"./post.html?AlgorithmsBeginningOfArray=artqgh"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnhhkv/)\n\n给定一个 n × n 的二维矩阵 `matrix` 表示一个图像。请你将图像顺时针旋转 90 度。\n\n你必须在 **原地** 旋转图像，这意味着你需要直接修改输入的二维矩阵。请不要 使用另一个矩阵来旋转图像。\n\n示例: \n\n![示例](https://assets.leetcode.com/uploads/2020/08/28/mat1.jpg)\n    输入：matrix = [[1,2,3],[4,5,6],[7,8,9]]\n","time":"2021-03-28 10:42:10","title":"旋转图像","url":"./post.html?AlgorithmsBeginningOfArray=cfqfzs"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xn4n7c/)\n\n罗马数字包含以下七种字符: `I`， `V`， `X`， `L`，`C`，`D` 和 `M`。]\n\n        字符          数值\n        I             1\n        V             5\n        X             10\n        L             50\n        C             100\n","time":"2021-03-28 09:58:19","title":"罗马数字转整数","url":"./post.html?AlgorithmsBeginningOfMath=acnydy"}]