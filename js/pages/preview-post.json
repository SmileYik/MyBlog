[{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/queue-stack/kj48j/)\n\n你有一个带有四个圆形拨轮的转盘锁。每个拨轮都有10个数字： `'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'` 。每个拨轮可以自由旋转：例如把 `'9'` 变为  `'0'`，`'0'` 变为 `'9'` 。每次旋转都只能旋转一个拨轮的一位数字。\n\n锁的初始数字为 `'0000'` ，一个代表四个拨轮的数字的字符串。\n\n列表 `deadends` 包含了一组死亡数字，一旦拨轮的数字和列表里的任何一个元素相同，这个锁将会被永久锁定，无法再被旋转。\n\n字符串 `target` 代表可以解锁的数字，你需要给出最小的旋转次数，如果无论如何不能解锁，返回 `-1`。\n\n","time":"2021-04-03 11:37:49","title":"打开转盘锁","url":"./post.html?QueueAndStack=adwmzh"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/queue-stack/kj48j/)\n\n给你一个由 `'1'`（陆地）和 `'0'`（水）组成的的二维网格，请你计算网格中岛屿的数量。\n\n岛屿总是被水包围，并且每座岛屿只能由水平方向和/或竖直方向上相邻的陆地连接形成。\n\n此外，你可以假设该网格的四条边均被水包围。\n\n\n###### 提示：\n","time":"2021-04-01 22:37:19","title":"岛屿数量","url":"./post.html?QueueAndStack=bbwjuh"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnto1s/)\n\n你是产品经理，目前正在带领一个团队开发新的产品。不幸的是，你的产品的最新版本没有通过质量检测。由于每个版本都是基于之前的版本开发的，所以错误的版本之后的所有版本都是错的。\n\n假设你有 `n` 个版本 `[1, 2, ..., n]`，你想找出导致之后所有版本出错的第一个错误的版本。\n\n你可以通过调用 `bool isBadVersion(version)` 接口来判断版本号 `version` 是否在单元测试中出错。实现一个函数来查找第一个错误的版本。你应该尽量减少对调用 API 的次数。\n\n###### 示例:\n\n","time":"2021-03-29 22:04:12","title":"第一个错误的版本","url":"./post.html?AlgorithmsBeginningOfSortAndSearch=axwcon"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/xnumcr/)\n\n给你两个有序整数数组 `nums1` 和 `nums2`，请你将 `nums2` 合并到 `nums1` 中，使 `nums1` 成为一个有序数组。\n\n初始化 `nums1` 和 `nums2` 的元素数量分别为 `m` 和 `n` 。你可以假设 `nums1` 的空间大小等于 `m + n`，这样它就有足够的空间保存来自 `nums2` 的元素。\n\n##### 示例1: \n\n        输入：nums1 = [1,2,3,0,0,0], m = 3, nums2 = [2,5,6], n = 3\n        输出：[1,2,2,3,5,6]\n","time":"2021-03-29 22:00:37","title":"合并两个有序数组","url":"./post.html?AlgorithmsBeginningOfSortAndSearch=gxsiis"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/top-interview-questions-easy/x2f9gg/)\n\n判断一个 9x9 的数独是否有效。只需要根据以下规则，验证已经填入的数字是否有效即可。\n\n1. 数字 `1-9` 在每一行只能出现一次。\n2. 数字 `1-9` 在每一列只能出现一次。\n3. 数字 `1-9` 在每一个以粗实线分隔的 `3x3` 宫内只能出现一次。\n\n数独部分空格内已填入了数字，空白格用 `'.'` 表示。\n\n","time":"2021-03-28 11:27:45","title":"有效数独","url":"./post.html?AlgorithmsBeginningOfArray=artqgh"}]