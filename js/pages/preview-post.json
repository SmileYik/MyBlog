[{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/5vokvr/)\n\n在一个 `m * n` 的棋盘的每一格都放有一个礼物，每个礼物都有一定的价值（价值大于 0）。你可以从棋盘的左上角开始拿格子里的礼物，**并每次向右或者向下移动一格、直到到达棋盘的右下角**。给定一个棋盘及其上面的礼物的价值，请计算你最多能拿到多少价值的礼物？\n\n示例1: \n\n```\n输入:\n[\n  [1,3,1],\n","time":"2021-04-13 22:36:06","title":"礼物的最大价值","url":"./post.html?AlgorithmsBookI=jjccvn"},{"markdown":"编写一个程序，找到两个单链表相交的起始节点。\n\n如下面的两个链表：\n\n![linkedlist](https://assets.leetcode-cn.com/aliyun-lc-upload/uploads/2018/12/14/160_statement.png)\n\n在节点 c1 开始相交。\n\n如果两个链表没有交点, 则返回 `null`.\n\n","time":"2021-04-09 21:52:53","title":"相交链表","url":"./post.html?LinkedList=xpcoao"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/linked-list/jjhf6/)\n\n给定一个链表，返回链表开始入环的第一个节点。 如果链表无环，则返回 `null`。\n\n为了表示给定链表中的环，我们使用整数 `pos` 来表示链表尾连接到链表中的位置（索引从 `0` 开始）。 如果 `pos` 是 `-1`，则在该链表中没有环。注意，`pos` 仅仅是用于标识环的情况，并不会作为参数传递到函数中。\n\n**说明：不允许修改给定的链表。**\n\n\n### 题解1 - 利用HashSet\n","time":"2021-04-09 21:41:23","title":"环形链表 II","url":"./post.html?LinkedList=tpwtaw"},{"markdown":"给你一个链表，删除链表的倒数第 n 个结点，并且返回链表的头结点。\n\n### 题解1\n\n先确定倒数第 n 个节点是顺序第几个节点, 然后再次遍历以删除.\n\n代码如下: \n\n```java\n/**\n","time":"2021-04-09 22:02:12","title":"删除链表的倒数第 N 个结点","url":"./post.html?LinkedList=jrarie"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/linked-list/jbex5/)\n\n给定一个链表，判断链表中是否有环。\n\n如果链表中有某个节点，可以通过连续跟踪 `next` 指针再次到达，则链表中存在环。 为了表示给定链表中的环，我们使用整数 `pos` 来表示链表尾连接到链表中的位置（索引从 0 开始）。 如果 `pos` 是 `-1`，则在该链表中没有环。注意：`pos` 不作为参数进行传递，仅仅是为了标识链表的实际情况。\n\n如果链表中存在环，则返回 `true` 。 否则，返回 `false` 。\n\n\n### 题解1 - HashSet\n","time":"2021-04-09 14:32:17","title":"环形链表","url":"./post.html?LinkedList=dwlidn"}]