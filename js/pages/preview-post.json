[{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/99wd55/)\n\n给定一个数字，我们按照如下规则把它翻译为字符串：`0` 翻译成 `“a”` ，`1` 翻译成 `“b”`，……，`11` 翻译成 `“l”`，……，`25` 翻译成 `“z”`。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。\n\n\n### 题解1\n\n我个人认为是暴力求解.\n原理就是利用递归, 一层一层剥夺数字直到数字字符串为空串.\n\n","time":"2021-04-17 22:35:49","title":"把数字翻译成字符串","url":"./post.html?AlgorithmsBookI=qzobry"},{"markdown":"输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。\n\n### 解法1\n\n用分治算法来解决.\n\n```java\nclass Solution {\n    public int maxSubArray(int[] nums) {\n    \treturn findMaxSubArray(nums, 0, nums.length - 1)[2];\n","time":"2021-04-17 22:24:59","title":"连续子数组的最大和","url":"./post.html?AlgorithmsBookI=bnzwps"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/57hyl5/)\n\n一只青蛙一次可以跳上`1`级台阶，也可以跳上`2`级台阶。求该青蛙跳上一个 `n` 级的台阶总共有多少种跳法。\n\n答案需要取模 `1e9+7（1000000007）`，如计算初始结果为：`1000000008`，请返回 `1`。\n\n### 解析\n\n* 上 1 级台阶, 只有一种方法, 也就是直接跳上1级台阶\n* 上 2 级台阶, 只有两种方法, 也就是一步一步上与一下上2个.\n","time":"2021-04-17 21:32:53","title":"青蛙跳台阶问题","url":"./post.html?AlgorithmsBookI=wozhbd"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/50fxu1/)\n\n写一个函数，输入 `n` ，求斐波那契（Fibonacci）数列的第 `n` 项（即 `F(N)`）。斐波那契数列的定义如下：\n```\nF(0) = 0,   F(1) = 1\nF(N) = F(N - 1) + F(N - 2), 其中 N > 1.\n```\n\n斐波那契数列由 `0` 和 `1` 开始，之后的斐波那契数就是由之前的两数相加而得出。\n\n","time":"2021-04-17 21:27:35","title":"斐波那契数列","url":"./post.html?AlgorithmsBookI=uubrwd"},{"markdown":"[原帖](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/58wowd/)\n\n给定一个 `m x n` 二维字符网格 `board` 和一个字符串单词 `word` 。如果 `word` 存在于网格中，返回 `true` ；否则，返回 `false` 。\n\n单词必须按照字母顺序，通过相邻的单元格内的字母构成，其中“相邻”单元格是那些水平相邻或垂直相邻的单元格。同一个单元格内的字母不允许被重复使用。\n\n### 题解1\n\n可以用 **深度优先搜索** 来解决此道题。\n\n","time":"2021-04-17 20:57:34","title":"矩阵中的路径","url":"./post.html?搜索与回溯=nlglyt"}]