[{"markdown":"[原贴](https://leetcode-cn.com/problems/capacity-to-ship-packages-within-d-days/)\n\n传送带上的包裹必须在 `D` 天内从一个港口运送到另一个港口。\n\n传送带上的第 `i` 个包裹的重量为 `weights[i]`。每一天，我们都会按给出重量的顺序往传送带上装载包裹。我们装载的重量不会超过船的最大运载重量。\n","time":"2021-04-26 21:35:09","title":"每日一题: 在 D 天内送达包裹的能力","url":"./post.html?ProblemEveryday=ucipxr=1"},{"markdown":"一条包含字母 `A-Z` 的消息通过以下映射进行了 **编码** ：\n```\n'A' -> 1\n'B' -> 2\n...\n","time":"2021-04-21 21:45:44","title":"解码方法","url":"./post.html?AlgorithmsBookI=qnqals=1"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/all-about-array/x9nivs/)\n\n给你一个有序数组 `nums` ，请你 **原地** 删除重复出现的元素，使每个元素 **最多出现两次** ，返回删除后数组的新长度。\n\n不要使用额外的数组空间，你必须在 **原地** 修改输入数组 并在使用 `O(1)` 额外空间的条件下完成。\n","time":"2021-04-21 18:08:13","title":"删除排序数组中的重复项 II","url":"./post.html?AlgorithmsBeginningOfArray=encskx=1"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/all-about-array/x9p1iv/)\n\n给你一个数组 `nums` 和一个值 `val`，你需要 原地 移除所有数值等于 `val` 的元素，并返回移除后数组的新长度。\n\n不要使用额外的数组空间，你必须仅使用 **O(1)** 额外空间并 **原地** 修改输入数组。\n","time":"2021-04-21 17:36:49","title":"移除元素","url":"./post.html?AlgorithmsBeginningOfArray=szlrwl=1"},{"markdown":"# 移动0\n  \n  \n## 题目\n  \n","time":"2021-04-21 17:30:11","title":"移动0","url":"./post.html?AlgorithmsBeginningOfArray=hlarhv=1"},{"markdown":"实现Math库中的`pow(x, n)` 函数, 即计算 `x` 的 `n` 次幂函数（即，$x^{n}$）。不得使用库函数，同时不需要考虑大数问题。\n\n### 题解1\n\n需要注意, 如果一个一个减过去, 那么可能会超时.\n","time":"2021-04-18 22:27:33","title":"数值的整数次方","url":"./post.html?merge=sdqmvc=1"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/99wd55/)\n\n给定一个数字，我们按照如下规则把它翻译为字符串：`0` 翻译成 `“a”` ，`1` 翻译成 `“b”`，……，`11` 翻译成 `“l”`，……，`25` 翻译成 `“z”`。一个数字可能有多个翻译。请编程实现一个函数，用来计算一个数字有多少种不同的翻译方法。\n\n\n","time":"2021-04-17 23:16:02","title":"把数字翻译成字符串","url":"./post.html?AlgorithmsBookI=qzobry=1"},{"markdown":"输入一个整型数组，数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。\n\n### 解法1\n\n用分治算法来解决.\n","time":"2021-04-17 22:24:59","title":"连续子数组的最大和","url":"./post.html?AlgorithmsBookI=bnzwps=1"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/57hyl5/)\n\n一只青蛙一次可以跳上`1`级台阶，也可以跳上`2`级台阶。求该青蛙跳上一个 `n` 级的台阶总共有多少种跳法。\n\n答案需要取模 `1e9+7（1000000007）`，如计算初始结果为：`1000000008`，请返回 `1`。\n","time":"2021-04-17 21:32:53","title":"青蛙跳台阶问题","url":"./post.html?AlgorithmsBookI=wozhbd=1"},{"markdown":"[原贴](https://leetcode-cn.com/leetbook/read/illustration-of-algorithm/50fxu1/)\n\n写一个函数，输入 `n` ，求斐波那契（Fibonacci）数列的第 `n` 项（即 `F(N)`）。斐波那契数列的定义如下：\n```\nF(0) = 0,   F(1) = 1\n","time":"2021-04-17 21:27:35","title":"斐波那契数列","url":"./post.html?AlgorithmsBookI=uubrwd=1"}]